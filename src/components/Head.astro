---
import "@/styles/globals.css";
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link rel="icon" type="image/x-icon" href="/assets/favicon.svg" />

<link rel="canonical" href="https://televensi.github.io" />

<title>televensi</title>
<meta name="title" content="televensi" />
<meta name="description" content="televensi" />

<meta property="og:type" content="website" />
<meta property="og:url" content="https://televensi.github.io" />
<meta property="og:title" content="televensi" />
<meta property="og:description" content="televensi" />

<meta property="twitter:url" content="https://televensi.github.io" />
<meta property="twitter:title" content="televensi" />
<meta property="twitter:description" content="televensi" />

<meta name="darkreader-lock" />

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
