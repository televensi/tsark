---
import "@/styles/globals.css";
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link rel="icon" type="image/x-icon" href="/assets/favicon.png" />

<link rel="canonical" href="https://tsarkqq.vercel.app" />

<title>tsark</title>
<meta name="title" content="tsarkqq" />
<meta name="description" content="tsarkqq" />

<meta property="og:type" content="website" />
<meta property="og:url" content="https://tsarkqq.vercel.app" />
<meta property="og:title" content="tsarkqq" />
<meta property="og:description" content="tsarkqq" />

<meta property="twitter:url" content="https://tsarkqq.vercel.app" />
<meta property="twitter:title" content="tsarkqq" />
<meta property="twitter:description" content="tsarkqq" />

<meta name="darkreader-lock" />

<script
    src="https://rybbit.z0x.ca/api/script.js"
    data-site-id="3"
    defer
></script>

 
<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
